import SupportedProject.default.ListTools


func add(a: int, b: int): int{
	var c: int = a + b
	return c
}

func sqrDist(x: int, y: int): int{
	var dist: int = x * x + y * y
	return dist
}

func fib(until: int): int{
	if(until < 0){
		printStr("Incorrect input!")
		return 0
	}
	else if(until == 0){
		return 0
	}
	else if(until == 1){
		return 1
	}
	else{
		var fibNum: int = fib(until - 2) + fib(until - 1)
		return fibNum
	}
	return 0
}

func doMultiple(function: f[int, int], times: int): int{
	var sum: int = 1
	var count: int = 0

	while(count < times){
		sum = function(sum)
		count = count + 1
	}

	return sum
}

func double(n: int): int{
	return n * 2
}

func printTimes(phrase: str, times: int){
	var count: int = 0

	while(count < times){
		printStr(phrase)
		count = count + 1
	}

	return
}


func main(): int{
	var a: int = (4 - 3) * (10 / 3)
	a = a + 1
	var b: int = 5
	var sum: int = add(a, b)

	var function: f[int, int, int] = add
	var function2: f[int, int, int] = function
	var function3: f[str, int, unit] = printTimes

	sum = function(10, 10)
	printInt(sum)

	var powered: int = doMultiple(double, 5)
	printInt(powered)

	if(sum > a){
		printStr("The sum is greater than a")
	}
	else if(sum < 2){
		printStr("The sum is less than a")
	}
	else{
		printStr("The sum is less than a")
	}
	var count: int = 0
	while(count < 10){
		printInt(fib(count))
		count = count + 1
	}
	else{
		printStr("I cannot count!")
	}

	printInt(sum)

	printInt(sqrDist(3, 3))

	printStr("Hello world!")

	printTimes("Hello", 5)

	var squares: [int] = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
	var size: int = squares.Count

	var smallest: int = ListTools.minInt(squares)
	printInt(smallest)


	var i: int = 0
	while(i < 10){
		printInt(squares[i])
		i = i + 1
	}

	return 0
}